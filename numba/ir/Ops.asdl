-- Medium-level operations, three-address (SSA) code.
--
-- Note: Each operation has a type

module Opcodes version "0.1"
{

    -- expr = constant | alloc | coerce | ...

    constant = const        -- (object pyval)

    alloc = new_list        -- (expr *elems)
          | new_tuple       -- (expr *elems)
          | new_dict        -- (expr *keys, expr *values)
          | new_set         -- (expr *elems)
          | new_string      -- (expr *chars)
          | new_bytes       -- (expr *char)
          | new_object      -- (expr *args)
          | new_ext_object  -- (expr *args)
          | new_struct      -- (expr *initializers)
          | new_data        -- (expr size)

    coerce = box            -- (expr arg)
           | unbox          -- (expr arg)

    convert = str_to_int    -- (expr arg)
            | int_to_str    -- (expr arg)
            | ptr_to_int    -- (expr arg)
            | int_to_ptr    -- (expr arg)

    indices = getindex_array
            | setindex_array
            | getslice_array
            | setslice_array
            | get


    fields = getfield_struct    -- (expr arg, int field_idx)
           | setfield_struct    -- (expr arg, int field_idx, expr value)
           | getfield_obj
           | setfield_obj
           | etc

    -- Math
    math = sin | asin | sinh | asinh
         | cos | acos | cosh | acosh
         | tan | atan | atan2 | tanh | atanh
         | log | log2 | log10 | log1p
         | exp | exp2 | expm1
         | floor | ceil
         | abs
         | erfc
         | rint

    binary_math = pow | round

    -- Calls

    calls = call_obj
          | call_exttype
          | call_extmethod
          | call_pointer
          | call_external
}