package:
   name: numba
   version: {{ GIT_DESCRIBE_TAG }}

source:
   path: ../..

build:
  number: {{ GIT_DESCRIBE_NUMBER|int }}
  entry_points:
    - pycc = numba.pycc:main
    - numba = numba.numba_entry:main
  script_env:
    - PY_VCRUNTIME_REDIST

requirements:
  # build and run dependencies are duplicated to avoid setuptools issues
  # when we also set install_requires in setup.py
  build:
    - {{ compiler('c') }}      # [not (armv6l or armv7l or aarch64)]
    - {{ compiler('cxx') }}    # [not (armv6l or armv7l or aarch64)]
    - llvm-openmp              # [osx]
  host:
    - python
    - numpy x.x
    - setuptools
    # On channel https://anaconda.org/numba/
    - llvmlite 0.25.*
    - funcsigs                 # [py27]
    - singledispatch           # [py27]
    - tbb-devel                # [not (ppc64le or armv6l or armv7l or aarch64)]
  run:
    - python
    - numpy x.x
    # On channel https://anaconda.org/numba/
    - llvmlite 0.25.*
    - funcsigs                 # [py27]
    - singledispatch           # [py27]
test:
  requires:
    - jinja2
    # Required to test optional Numba features
    - cffi
    # temporarily disable scipy testing on ARM, need to build out more packages
    - scipy                    # [not (armv6l or armv7l)]
    - ipython                  # [not (armv6l or armv7l)]
    - setuptools
    - faulthandler             # [py27]
    - tbb                      # [not (ppc64le or armv6l or armv7l or aarch64)]
    - llvm-openmp              # [osx]
    # Need these for AOT. Do not init msvc as it may not be present
    - {{ compiler('c') }}      # [not (win or armv6l or armv7l or aarch64)]
    - {{ compiler('cxx') }}    # [not (win or armv6l or armv7l or aarch64)]
  files:
    - mandel.py

about:
  home: http://numba.pydata.org/
  license: BSD
  license_file: LICENSE
  summary: a just-in-time Python function compiler based on LLVM
